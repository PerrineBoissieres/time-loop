{"version":3,"sources":["webpack:///time-loop.min.js","webpack:///webpack/bootstrap 5eb67d8ac1623b5d192f","webpack:///./src/index.js","webpack:///./src/timer.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","escapeRegExp","str","replace","checkNamespace","timer","namespace","reg","RegExp","test","orderByPriority","ev1","ev2","options","priority","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_timer","_timer2","currentTime","fpsCurrentTime","ev","prom","TimeLoop","_this","this","timers","elapsedTime","lastTime","paused","started","sortable","autoSort","defaultNamespace","fps","fpsLastTime","frameCount","proxyStep","step","bind","document","hidden","addEventListener","pause","start","get","Date","now","_this2","sort","time","map","e","ended","update","window","requestAnimationFrame","nb","Error","Array","cb","ctx","getFromPool","callback","context","push","_namespace","action","match","_this3","Promise","resolve","createTimer","type","arguments","undefined","Timer","settings","extendOptions","defaultOptions","_options","reset","ms"],"mappings":"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","file":"time-loop.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _timer = __webpack_require__(1);\n\t\n\tvar _timer2 = _interopRequireDefault(_timer);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar reg = void 0;\n\tvar currentTime = void 0;\n\tvar fpsCurrentTime = void 0;\n\tvar ev = void 0;\n\tvar i = void 0;\n\tvar prom = void 0;\n\t\n\tfunction escapeRegExp(str) {\n\t  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n\t}\n\tfunction checkNamespace(timer, namespace) {\n\t  reg = new RegExp('^' + escapeRegExp(namespace));\n\t\n\t  if (reg.test(timer.namespace)) return true;\n\t\n\t  return false;\n\t}\n\tfunction orderByPriority(ev1, ev2) {\n\t  return ev2.options.priority - ev1.options.priority;\n\t}\n\t\n\tvar TimeLoop = function () {\n\t  _createClass(TimeLoop, [{\n\t    key: 'time',\n\t    get: function get() {\n\t      return Date.now();\n\t    }\n\t  }]);\n\t\n\t  function TimeLoop() {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, TimeLoop);\n\t\n\t    this.timers = [];\n\t    this.elapsedTime = 0;\n\t    this.lastTime = 0;\n\t    this.paused = true;\n\t    this.started = false;\n\t    this.sortable = false;\n\t    this.autoSort = true;\n\t    this.defaultNamespace = 'all';\n\t\n\t    this.fps = 0;\n\t    this.fpsLastTime = 0;\n\t    this.frameCount = 0;\n\t\n\t    this.proxyStep = this.step.bind(this);\n\t\n\t    // If the browser supports the visibilityChange API, we bind the event\n\t    // to stop and re-start the loop automatically\n\t    if (typeof document.hidden !== 'undefined') {\n\t      document.addEventListener('visibilitychange', function () {\n\t        if (document.hidden) _this.pause();else _this.start();\n\t      }, false);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * @method step\n\t   * Updates all registered timers\n\t   */\n\t\n\t\n\t  _createClass(TimeLoop, [{\n\t    key: 'step',\n\t    value: function step() {\n\t      var _this2 = this;\n\t\n\t      if (this.paused) return;\n\t\n\t      if (this.autoSort && this.sortable) {\n\t        this.sort();\n\t        this.sortable = false;\n\t      }\n\t\n\t      currentTime = fpsCurrentTime = this.time;\n\t      this.elapsedTime = currentTime - this.lastTime;\n\t      this.lastTime = currentTime;\n\t      this.frameCount++;\n\t\n\t      if (fpsCurrentTime - 1000 > this.fpsLastTime) {\n\t        this.fps = this.frameCount;\n\t        this.frameCount = 0;\n\t        this.fpsLastTime = fpsCurrentTime;\n\t      }\n\t\n\t      this.timers.map(function (e) {\n\t        if (!e.paused && !e.ended) e.update(_this2.elapsedTime);\n\t      });\n\t\n\t      window.requestAnimationFrame(this.proxyStep);\n\t    }\n\t\n\t    /**\n\t     * @method start\n\t     * Starts the loop if not already started\n\t     */\n\t\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      if (!this.paused) return; // If already started, we quit\n\t\n\t      this.lastTime = this.time;\n\t      this.fpsLastTime = this.time;\n\t      this.elapsedTime = 0;\n\t      this.paused = false;\n\t      this.frameCount = 0;\n\t\n\t      if (!this.started) {\n\t        this.started = true;\n\t        window.requestAnimationFrame(this.proxyStep);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * @method pause\n\t     * Pauses the loop\n\t     * @return {TimeLoop} chainable\n\t     */\n\t\n\t  }, {\n\t    key: 'pause',\n\t    value: function pause() {\n\t      this.paused = true;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * @method resume\n\t     * Alias for start method\n\t     * @return {TimeLoop} chainable\n\t     */\n\t\n\t  }, {\n\t    key: 'resume',\n\t    value: function resume() {\n\t      this.start();\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * @method sort\n\t     * Sorts timers by priority\n\t     * @return {TimeLoop} chainable\n\t     */\n\t\n\t  }, {\n\t    key: 'sort',\n\t    value: function sort() {\n\t      this.timers.sort(orderByPriority);\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * @method createPool\n\t     * Creates a given number of empty timers\n\t     * @param {Number} The number of timers to create\n\t     * @return {TimeLoop} chainable\n\t     */\n\t\n\t  }, {\n\t    key: 'createPool',\n\t    value: function createPool(nb) {\n\t      if (this.timers.length) {\n\t        throw new Error('Timers have already been created, cannot pre-allocate.');\n\t      }\n\t\n\t      this.timers = new Array(nb);\n\t\n\t      for (i = 0; i < nb; i++) {\n\t        ev = new _timer2.default();\n\t        ev.ended = true;\n\t        this.timers[i] = ev;\n\t      }\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * @method createTimer\n\t     * Creates a new timer, from pool if available\n\t     * @param {function} callback function to execute\n\t     * @param {Object} parameters\n\t     * @param {Object} context for callback execution\n\t     * @return {Timer} newly created timer\n\t     */\n\t\n\t  }, {\n\t    key: 'createTimer',\n\t    value: function createTimer(cb, options, ctx) {\n\t      ev = this.getFromPool();\n\t\n\t      if (options.namespace) options.namespace = this.defaultNamespace + '.' + options.namespace;else options.namespace = this.defaultNamespace;\n\t\n\t      if (ev) {\n\t        ev.callback = cb;\n\t        ev.context = ctx || window;\n\t        ev.ended = false;\n\t        ev.paused = false;\n\t        return ev.options(options);\n\t      }\n\t\n\t      ev = new _timer2.default(cb, options, ctx);\n\t      this.timers.push(ev);\n\t\n\t      this.sortable = true;\n\t\n\t      return ev;\n\t    }\n\t\n\t    /**\n\t     * @method getFromPool\n\t     * Retrieves an ended event from the pool, returns false if none is found\n\t     * @return {Timer|bool}\n\t     */\n\t\n\t  }, {\n\t    key: 'getFromPool',\n\t    value: function getFromPool() {\n\t      for (i = 0; i < this.timers.length; i++) {\n\t        ev = this.timers[i];\n\t        if (ev.ended) return ev;\n\t      }\n\t\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * @method namespace\n\t     * Retrieves timers under given namespace, can execute an action on all of them\n\t     * @param {String} namespace\n\t     * @param {String} optional action name (start, pause, end)\n\t     * @return {Array} array of timers\n\t     */\n\t\n\t  }, {\n\t    key: 'namespace',\n\t    value: function namespace(_namespace, action) {\n\t      var match = [];\n\t\n\t      this.timers.map(function (e) {\n\t        if (!e.ended && checkNamespace(e, _namespace)) {\n\t          if (action && action === 'start') e.paused = false;else if (action && action === 'pause') e.paused = true;else if (action && action === 'end') e.ended = true;\n\t\n\t          match.push(e);\n\t        }\n\t      });\n\t\n\t      return match;\n\t    }\n\t\n\t    /**\n\t     * @function wait\n\t     * Creates a timeout and returns a promise\n\t     * @param {Number} The time to wait before resolving\n\t     * @return {Promise}\n\t     */\n\t\n\t  }, {\n\t    key: 'wait',\n\t    value: function wait(time) {\n\t      var _this3 = this;\n\t\n\t      prom = new Promise(function (resolve) {\n\t        _this3.createTimer(function () {\n\t          return resolve();\n\t        }, {\n\t          type: 'timeout',\n\t          time: time\n\t        });\n\t      });\n\t\n\t      return prom;\n\t    }\n\t\n\t    /**\n\t     * @function repeat\n\t     * Creates an interval\n\t     * @param {function} The callback function\n\t     * @param {Number} The time to wait between calls\n\t     * @return {Timer}\n\t     */\n\t\n\t  }, {\n\t    key: 'repeat',\n\t    value: function repeat(callback) {\n\t      var time = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\t\n\t      return this.createTimer({\n\t        type: 'interval',\n\t        time: time\n\t      }, callback, this);\n\t    }\n\t  }]);\n\t\n\t  return TimeLoop;\n\t}();\n\t\n\texports.default = TimeLoop;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Timer = function () {\n\t  _createClass(Timer, [{\n\t    key: 'defaultOptions',\n\t    get: function get() {\n\t      return {\n\t        type: 'timeout',\n\t        time: 0,\n\t        priority: 1,\n\t        namespace: ''\n\t      };\n\t    }\n\t\n\t    /**\n\t     * @constructor\n\t     * @param {function} cb The callback to be delayed or repeated\n\t     * @param {Object} options A list of options\n\t     * @param {Object} ctx The context of the callback's execution\n\t     */\n\t\n\t  }]);\n\t\n\t  function Timer(cb, options, ctx) {\n\t    _classCallCheck(this, Timer);\n\t\n\t    this.settings = extendOptions(this.defaultOptions, options);\n\t    this.paused = false;\n\t    this.ended = false;\n\t    this.callback = cb || undefined;\n\t    this.context = ctx || window;\n\t    this.elapsedTime = 0;\n\t  }\n\t\n\t  /**\n\t   * @method options\n\t   * Changes the options of an existing Timer\n\t   * @param {Object} A list of options\n\t   * @param {bool} false if you don't want to reset all current options\n\t   * @return {Timer} chainable\n\t   */\n\t\n\t\n\t  _createClass(Timer, [{\n\t    key: 'options',\n\t    value: function options(_options) {\n\t      var reset = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\n\t\n\t      if (!reset) this.settings = extendOptions(this.settings, _options);else this.settings = extendOptions(this.defaultOptions, _options);\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * @method update\n\t     * Adds the elapsed time since last call\n\t     * @param {Number} Number of ms passed\n\t     */\n\t\n\t  }, {\n\t    key: 'update',\n\t    value: function update(ms) {\n\t      if (this.paused || this.ended) return;\n\t\n\t      this.elapsedTime += ms;\n\t      if (this.elapsedTime >= this.settings.time) {\n\t        this.callback.call(this.context);\n\t        this.elapsedTime = 0;\n\t        if (this.settings.type === 'timeout') this.ended = true;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * @method pause\n\t     * Pauses the event\n\t     * @return {Timer} chainable\n\t     */\n\t\n\t  }, {\n\t    key: 'pause',\n\t    value: function pause() {\n\t      this.paused = true;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * @method resume\n\t     * Resumes the event\n\t     * @return {Timer} chainable\n\t     */\n\t\n\t  }, {\n\t    key: 'resume',\n\t    value: function resume() {\n\t      this.paused = false;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * @method reset\n\t     * Resets internal elapsed time to 0\n\t     * @return {Timer} chainable\n\t     */\n\t\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      this.elapsedTime = 0;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * @method end\n\t     * Stops the event\n\t     * @return {Timer} chainable\n\t     */\n\t\n\t  }, {\n\t    key: 'end',\n\t    value: function end() {\n\t      this.ended = true;\n\t      return this;\n\t    }\n\t  }]);\n\t\n\t  return Timer;\n\t}();\n\t\n\texports.default = Timer;\n\tmodule.exports = exports['default'];\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** time-loop.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 5eb67d8ac1623b5d192f\n **/","import Timer from './timer';\n\nlet reg;\nlet currentTime;\nlet fpsCurrentTime;\nlet ev;\nlet i;\nlet prom;\n\nfunction escapeRegExp(str) {\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n}\nfunction checkNamespace(timer, namespace) {\n  reg = new RegExp('^' + escapeRegExp(namespace));\n\n  if (reg.test(timer.namespace)) return true;\n\n  return false;\n}\nfunction orderByPriority(ev1, ev2) {\n  return ev2.options.priority - ev1.options.priority;\n}\n\nexport default class TimeLoop {\n  get time() { return Date.now(); }\n\n  constructor() {\n    this.timers = [];\n    this.elapsedTime = 0;\n    this.lastTime = 0;\n    this.paused = true;\n    this.started = false;\n    this.sortable = false;\n    this.autoSort = true;\n    this.defaultNamespace = 'all';\n\n    this.fps = 0;\n    this.fpsLastTime = 0;\n    this.frameCount = 0;\n\n    this.proxyStep = this.step.bind(this);\n\n    // If the browser supports the visibilityChange API, we bind the event\n    // to stop and re-start the loop automatically\n    if (typeof document.hidden !== 'undefined') {\n      document.addEventListener('visibilitychange', () => {\n        if (document.hidden) this.pause();\n        else this.start();\n      }, false);\n    }\n  }\n\n  /**\n   * @method step\n   * Updates all registered timers\n   */\n  step() {\n    if (this.paused) return;\n\n    if (this.autoSort && this.sortable) {\n      this.sort();\n      this.sortable = false;\n    }\n\n    currentTime = fpsCurrentTime = this.time;\n    this.elapsedTime = currentTime - this.lastTime;\n    this.lastTime = currentTime;\n    this.frameCount++;\n\n    if (fpsCurrentTime - 1000 > this.fpsLastTime) {\n      this.fps = this.frameCount;\n      this.frameCount = 0;\n      this.fpsLastTime = fpsCurrentTime;\n    }\n\n    this.timers.map((e) => {\n      if (!e.paused && !e.ended) e.update(this.elapsedTime);\n    });\n\n    window.requestAnimationFrame(this.proxyStep);\n  }\n\n  /**\n   * @method start\n   * Starts the loop if not already started\n   */\n  start() {\n    if (!this.paused) return; // If already started, we quit\n\n    this.lastTime = this.time;\n    this.fpsLastTime = this.time;\n    this.elapsedTime = 0;\n    this.paused = false;\n    this.frameCount = 0;\n\n    if (!this.started) {\n      this.started = true;\n      window.requestAnimationFrame(this.proxyStep);\n    }\n  }\n\n  /**\n   * @method pause\n   * Pauses the loop\n   * @return {TimeLoop} chainable\n   */\n  pause() {\n    this.paused = true;\n    return this;\n  }\n\n  /**\n   * @method resume\n   * Alias for start method\n   * @return {TimeLoop} chainable\n   */\n  resume() {\n    this.start();\n    return this;\n  }\n\n  /**\n   * @method sort\n   * Sorts timers by priority\n   * @return {TimeLoop} chainable\n   */\n  sort() {\n    this.timers.sort(orderByPriority);\n    return this;\n  }\n\n  /**\n   * @method createPool\n   * Creates a given number of empty timers\n   * @param {Number} The number of timers to create\n   * @return {TimeLoop} chainable\n   */\n  createPool(nb) {\n    if (this.timers.length) {\n      throw new Error('Timers have already been created, cannot pre-allocate.');\n    }\n\n    this.timers = new Array(nb);\n\n    for (i = 0; i < nb; i++) {\n      ev = new Timer();\n      ev.ended = true;\n      this.timers[i] = ev;\n    }\n\n    return this;\n  }\n\n  /**\n   * @method createTimer\n   * Creates a new timer, from pool if available\n   * @param {function} callback function to execute\n   * @param {Object} parameters\n   * @param {Object} context for callback execution\n   * @return {Timer} newly created timer\n   */\n  createTimer(cb, options, ctx) {\n    ev = this.getFromPool();\n\n    if (options.namespace) options.namespace = this.defaultNamespace + '.' + options.namespace;\n    else options.namespace = this.defaultNamespace;\n\n    if (ev) {\n      ev.callback = cb;\n      ev.context = ctx || window;\n      ev.ended = false;\n      ev.paused = false;\n      return ev.options(options);\n    }\n\n    ev = new Timer(cb, options, ctx);\n    this.timers.push(ev);\n\n    this.sortable = true;\n\n    return ev;\n  }\n\n  /**\n   * @method getFromPool\n   * Retrieves an ended event from the pool, returns false if none is found\n   * @return {Timer|bool}\n   */\n  getFromPool() {\n    for (i = 0; i < this.timers.length; i++) {\n      ev = this.timers[i];\n      if (ev.ended) return ev;\n    }\n\n    return false;\n  }\n\n  /**\n   * @method namespace\n   * Retrieves timers under given namespace, can execute an action on all of them\n   * @param {String} namespace\n   * @param {String} optional action name (start, pause, end)\n   * @return {Array} array of timers\n   */\n  namespace(namespace, action) {\n    const match = [];\n\n    this.timers.map((e) => {\n      if (!e.ended && checkNamespace(e, namespace)) {\n        if (action && action === 'start') e.paused = false;\n        else if (action && action === 'pause') e.paused = true;\n        else if (action && action === 'end') e.ended = true;\n\n        match.push(e);\n      }\n    });\n\n    return match;\n  }\n\n  /**\n   * @function wait\n   * Creates a timeout and returns a promise\n   * @param {Number} The time to wait before resolving\n   * @return {Promise}\n   */\n  wait(time) {\n    prom = new Promise((resolve) => {\n      this.createTimer(() => resolve(), {\n        type: 'timeout',\n        time,\n      });\n    });\n\n    return prom;\n  }\n\n  /**\n   * @function repeat\n   * Creates an interval\n   * @param {function} The callback function\n   * @param {Number} The time to wait between calls\n   * @return {Timer}\n   */\n  repeat(callback, time = 0) {\n    return this.createTimer({\n      type: 'interval',\n      time,\n    }, callback, this);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","export default class Timer {\n\n  get defaultOptions() {\n    return {\n      type: 'timeout',\n      time: 0,\n      priority: 1,\n      namespace: '',\n    };\n  }\n\n  /**\n   * @constructor\n   * @param {function} cb The callback to be delayed or repeated\n   * @param {Object} options A list of options\n   * @param {Object} ctx The context of the callback's execution\n   */\n  constructor(cb, options, ctx) {\n    this.settings = extendOptions(this.defaultOptions, options);\n    this.paused = false;\n    this.ended = false;\n    this.callback = cb || undefined;\n    this.context = ctx || window;\n    this.elapsedTime = 0;\n  }\n\n  /**\n   * @method options\n   * Changes the options of an existing Timer\n   * @param {Object} A list of options\n   * @param {bool} false if you don't want to reset all current options\n   * @return {Timer} chainable\n   */\n  options(options, reset = true) {\n    if (!reset) this.settings = extendOptions(this.settings, options);\n    else this.settings = extendOptions(this.defaultOptions, options);\n    return this;\n  }\n\n  /**\n   * @method update\n   * Adds the elapsed time since last call\n   * @param {Number} Number of ms passed\n   */\n  update(ms) {\n    if (this.paused || this.ended) return;\n\n    this.elapsedTime += ms;\n    if (this.elapsedTime >= this.settings.time) {\n      this.callback.call(this.context);\n      this.elapsedTime = 0;\n      if (this.settings.type === 'timeout') this.ended = true;\n    }\n  }\n\n  /**\n   * @method pause\n   * Pauses the event\n   * @return {Timer} chainable\n   */\n  pause() {\n    this.paused = true;\n    return this;\n  }\n\n  /**\n   * @method resume\n   * Resumes the event\n   * @return {Timer} chainable\n   */\n  resume() {\n    this.paused = false;\n    return this;\n  }\n\n  /**\n   * @method reset\n   * Resets internal elapsed time to 0\n   * @return {Timer} chainable\n   */\n  reset() {\n    this.elapsedTime = 0;\n    return this;\n  }\n\n  /**\n   * @method end\n   * Stops the event\n   * @return {Timer} chainable\n   */\n  end() {\n    this.ended = true;\n    return this;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/timer.js\n **/"],"sourceRoot":""}